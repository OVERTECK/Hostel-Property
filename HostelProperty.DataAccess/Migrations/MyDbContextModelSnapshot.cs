// <auto-generated />
using System;
using HostelProperty.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HostelProperty.DataAccess.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Resident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("NumberCourse")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte?>("CountResidents")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("Floor")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.RoomSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DateReseption")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomSubjects");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DateReseption")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ResidentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Resident", b =>
                {
                    b.HasOne("HostelProperty.DataAccess.Entities.Room", "Room")
                        .WithMany("Residents")
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.RoomSubject", b =>
                {
                    b.HasOne("HostelProperty.DataAccess.Entities.Room", "Room")
                        .WithMany("RoomSubjects")
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Subject", b =>
                {
                    b.HasOne("HostelProperty.DataAccess.Entities.Resident", "Resident")
                        .WithMany("Subjects")
                        .HasForeignKey("ResidentId");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Resident", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("HostelProperty.DataAccess.Entities.Room", b =>
                {
                    b.Navigation("Residents");

                    b.Navigation("RoomSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
